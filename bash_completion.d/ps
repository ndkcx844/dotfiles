# bash completion for ps                             -*- shell-script -*-

# ********* simple selection *********  ********* selection by list *********
# -A all processes                      -C by command name
# -N negate selection                   -G by real group ID (supports names)
# -a all w/ tty except session leaders  -U by real user ID (supports names)
# -d all except session leaders         -g by session OR by effective group name
# -e all processes                      -p by process ID
# T  all processes on this terminal     -s processes in the sessions given
# a  all w/ tty, including other users  -t by tty
# g  OBSOLETE -- DO NOT USE             -u by effective user ID (supports names)
# r  only running processes             U  processes for specified users
# x  processes w/o controlling ttys     t  by tty
# *********** output format **********  *********** long options ***********
# -o,o user-defined  -f full            --Group --User --pid --cols --ppid
# -j,j job control   s  signal          --group --user --sid --rows --info
# -O,O preloaded -o  v  virtual memory  --cumulative --format --deselect
# -l,l long          u  user-oriented   --sort --tty --forest --version
# -F   extra full    X  registers       --heading --no-heading --context
#                     ********* misc options *********
# -V,V  show version      L  list format codes  f  ASCII art forest
# -m,m,-L,-T,H  threads   S  children in sum    -y change -l format
# -M,Z  security data     c  true command name  -c scheduling class
# -w,w  wide output       n  numeric WCHAN,UID  -H process hierarchy

PS_VERSION="$(ps --version | awk '{split($NF, A, "."); printf "%d%02d%02d", A[1], A[2], A[3]}')"

function _ps() {
	local cur
	_init_completion || return

	if ((30207 < "${PS_VERSION:-0}")); then
		if [[ "$cur" == --* ]]; then
			local longopts=($(_parse_help - < <(ps --help all 2>/dev/null) || command grep ^--))
			COMPREPLY=($(compgen -W "${longopts[*]}" -- "$cur"))
			return
		elif [[ "$cur" == -* ]]; then
			local shortopts=($(_parse_help - < <(ps --help all 2>/dev/null) || command grep -v ^--))
			COMPREPLY=($(compgen -W "${shortopts[*]}" -- "$cur"))
			return
		elif [[ "$cur" == "" ]]; then
			local bsdopts=(T a g r U x t s v u X L f S c n)
			COMPREPLY=($(compgen -W "${bsdopts[*]}" -- "$cur"))
		fi
	else
		# for Cent5
		if [[ "$cur" == --* ]]; then
			local longopts=(--Group --User --pid --cols --ppid --group --user --sid --rows --info
					--cumulative --format --deselect --sort --tty --forest --version
					--heading --no-heading --context)
			COMPREPLY=($(compgen -W "${longopts[*]}" -- "$cur"))
			return
		elif [[ "$cur" == -* ]]; then
			local shortopts=(-A -C -N -G -a -U -d -g -e -p -s -t -u -o -f -j -O -l -F -V -m -y -M -c -w -H)
			COMPREPLY=($(compgen -W "${shortopts[*]}" -- "$cur"))
			return
		elif [[ "$cur" == "" ]]; then
			local bsdopts=(T a g r U x t s v u X L f S c n)
			COMPREPLY=($(compgen -W "${bsdopts[*]}" -- "$cur"))
		fi
	fi

}
complete -F _ps ps
